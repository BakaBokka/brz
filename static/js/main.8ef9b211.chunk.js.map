{"version":3,"sources":["components/Button/Button.jsx","components/Btn/Btn.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","handleClick","active","text","id","className","onClick","data","Btn","useState","setActive","target","buttonElement","map","item","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAaeA,MAZf,YAAoD,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,KAAMC,EAAM,EAANA,GAC3C,OACE,wBACEC,UAAWH,IAAWE,EAAK,SAAW,GACtCE,QAASL,EACTG,GAAIA,EAHN,SAKGD,KCLDI,G,MAAO,CAAC,KAAM,KAAM,OAwBXC,MAtBf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNP,EADM,KACEQ,EADF,KAEb,SAAST,EAAT,GAAkC,IAAXU,EAAU,EAAVA,OACrBD,EAAUC,EAAOP,IAGnB,IAAMQ,EAAgBL,EAAKM,KAAI,SAACC,EAAMC,GAAP,OAC7B,yBACET,QAASL,EACTC,OAAQA,EACRC,KAAMW,EAENV,GAAIU,EACJT,UAAWH,IAAWY,EAAO,MAAQ,GANvC,UAQGA,EAAM,MAJFC,MAQT,OAAO,qBAAKV,UAAU,OAAf,SAAuBO,KCnB1BL,EAAO,CAAC,KAAM,KAAM,MA0BXS,MAxBf,WAAgB,IAAD,EACeP,mBAAS,IADxB,mBACNP,EADM,KACEQ,EADF,KAEb,SAAST,EAAT,GAAkC,IAAXU,EAAU,EAAVA,OACrBD,EAAUC,EAAOP,IAGnB,IAAMQ,EAAgBL,EAAKM,KAAI,SAACC,EAAMC,GAAP,OAC7B,cAAC,EAAD,CACEd,YAAaA,EACbC,OAAQA,EACRC,KAAMW,EAENV,GAAIU,GADCC,MAKT,OACE,qCACE,qBAAKV,UAAU,MAAf,SAAsBO,IACtB,cAAC,EAAD,QCdSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8ef9b211.chunk.js","sourcesContent":["import \"./Button.css\";\nfunction Button({ handleClick, active, text, id }) {\n  return (\n    <button\n      className={active === id ? \"Button\" : \"\"}\n      onClick={handleClick}\n      id={id}\n    >\n      {text}\n    </button>\n  );\n}\n\nexport default Button;\n\n","import \"./Btn.css\";\nimport React, { useState } from \"react\";\n\nconst data = [\"42\", \"43\", \"44\"];\n\nfunction Btn() {\n  const [active, setActive] = useState(\"\");\n  function handleClick({ target }) {\n    setActive(target.id);\n  }\n\n  const buttonElement = data.map((item, i) => (\n    <button\n      onClick={handleClick}\n      active={active}\n      text={item}\n      key={i}\n      id={item}\n      className={active === item ? \"Btn\" : \"\"}\n    >\n      {item}{\" \"}\n    </button>\n  ));\n\n  return <div className=\"Btns\">{buttonElement}</div>;\n}\n\nexport default Btn;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Button from \"./components/Button/Button.jsx\";\nimport Btn from \"./components/Btn/Btn\";\n\nconst data = [\"42\", \"43\", \"44\"];\n\nfunction App() {\n  const [active, setActive] = useState(\"\");\n  function handleClick({ target }) {\n    setActive(target.id);\n  }\n\n  const buttonElement = data.map((item, i) => (\n    <Button\n      handleClick={handleClick}\n      active={active}\n      text={item}\n      key={i}\n      id={item}\n    />\n  ));\n\n  return (\n    <>\n      <div className=\"App\">{buttonElement}</div>\n      <Btn />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}